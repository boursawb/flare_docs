<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../../../Resources/TableStyles/PatternedRows.css" rel="stylesheet" MadCap:stylesheetType="table" /><title>Calculated Fields</title>
        <link href="../../../Resources/Stylesheets/MainStyles.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1>
            <MadCap:keyword term="Calculated Fields" />Calculated Fields</h1>
        <p><MadCap:variable name="General.IPSshortName" MadCap:conditions="General.IPS" /><MadCap:variable name="General.CJPshortName" MadCap:conditions="General.CJP" /> includes the ability for administrators to perform <MadCap:keyword term="aggregate" />aggregate functions on existing order attributes for the purposes of creating new order attributes. Given the properties used in the configuration files, you will see calculated fields referred to as aggregators. Once calculated fields have been created, their values can be used for sorting, filtering and stamping in the same manner that is done with existing attributes in the system. Field calculation occurs during the sorting and batching processes. Following the completion of a new sort group or batch being built, the system will perform a check to see if any calculated fields (aggregators)&#160;have been defined. Each field defined will be evaluated to determine if the newly created sort group or batch contains order attributes that will need to be calculated. The first step in this process is to evaluate the context of the aggregator. The context tells <MadCap:variable name="General.IPSshortName" MadCap:conditions="General.IPS" /><MadCap:variable name="General.CJPshortName" MadCap:conditions="General.CJP" /> which level to look for orders at. The two contexts which calculated fields can be applied are sort group and batch. When a match occurs, the source attribute is referenced and used to perform a function on. The value is then stored in the new destination attribute and now available in <MadCap:variable name="General.IPSshortName" MadCap:conditions="General.IPS" /><MadCap:variable name="General.CJPshortName" MadCap:conditions="General.CJP" /> as a new calculated field.</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Calculated Field Example</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p class="Example">Assume we have an existing order attribute called Due Date. You need to identify the oldest due date for an order contained within a batch. We can create a new calculated field that looks at all orders contained within a batch and identifies the one with the oldest due date. This new value can then be stored in a new attribute called Oldest Due Date.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <h2>Creating Calculated Fields</h2>
        <p>All calculated fields reside in the <code>\\&lt;yourServer&gt;\sharedconfig\ordersort\aggregators</code> folder. This folder will contain one XML&#160;file for each calculated field you build. Each aggregator XML&#160;will define the context, source attribute, destination attribute and function to be performed. </p>Aggregator XML<pre><code class="language-xml">&lt;aggregator&gt;
	&lt;context&gt;IDFBatch_Orders&lt;/context&gt;
	&lt;sourceAttribute&gt;dueDate&lt;/sourceAttribute&gt;
	&lt;destAttribute&gt;dueDateBatch&lt;/destAttribute&gt;
	&lt;function&gt;min&lt;/function&gt;
	&lt;format&gt;%1$tm%1$td&lt;/format&gt;
&lt;/aggregator&gt;</code></pre><p><strong>Context </strong>describes at which level the calculation will be performed. Valid values include <code>IDFSortGroup_Orders </code>and <code>IDFBatch_Orders</code></p><p><strong>Source attribute</strong> identifies the attribute to perform the calculation against</p><p><strong>Dest attribute</strong> describes the new attribute to apply to the batch or sort group</p><p><strong>Function</strong> identifies the operation to apply</p><p><strong>Format </strong>Allows you to format the destination attribute, for example padded or date MMDD. Formatting the destination attribute will always result in the data type being a string</p><p>The following table outlines the available data types and the functions that can be applied.</p><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/PatternedRows.css');" class="TableStyle-PatternedRows" cellspacing="0"><col class="TableStyle-PatternedRows-Column-Regular" /><col class="TableStyle-PatternedRows-Column-Regular" /><tbody><tr class="TableStyle-PatternedRows-Body-LightRows"><td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">Data Type</td><td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">Available Functions</td></tr><tr class="TableStyle-PatternedRows-Body-DarkerRows"><td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">Date</td><td class="TableStyle-PatternedRows-BodyD-Regular-DarkerRows">min, max</td></tr><tr class="TableStyle-PatternedRows-Body-LightRows"><td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">Integer</td><td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">min, max, avg, count, sum, distinct count</td></tr><tr class="TableStyle-PatternedRows-Body-DarkerRows"><td class="TableStyle-PatternedRows-BodyE-Regular-DarkerRows">Long</td><td class="TableStyle-PatternedRows-BodyD-Regular-DarkerRows">min, max, avg, count, sum, distinct count</td></tr><tr class="TableStyle-PatternedRows-Body-LightRows"><td class="TableStyle-PatternedRows-BodyE-Regular-LightRows">Float</td><td class="TableStyle-PatternedRows-BodyD-Regular-LightRows">min, max, avg, count, sum, distinct count</td></tr><tr class="TableStyle-PatternedRows-Body-DarkerRows"><td class="TableStyle-PatternedRows-BodyB-Regular-DarkerRows">Double</td><td class="TableStyle-PatternedRows-BodyA-Regular-DarkerRows">min, max, avg, count, sum, distinct count</td></tr></tbody></table><h3>Setting up a new calculated field</h3><p>The following steps outline how to setup a new calculated field for Oldest Due Date which determines the oldest due date of an order in a batch and then displays that as a new attribute called oldestDueDate.</p><ol><li>On the master core host, browse to the following location - <code>\\&lt;host&gt;\idf\sharedconfig\ordersort\aggregators</code></li><li>Create a new XML&#160;file called <code>oldestDueDate.aggregator.xml</code></li><li>Copy the contents of the aggregator example and paste it in to the new file</li><li>Save the new aggregator</li></ol><p class="note">It is recommended to name your destination attributes with an SG suffix for sort group attributes and Batch suffix for batch attributes. For example, using the destination attribute from the previous example, we will create a new order attribute called dueDateBatch and if applied at the sort group context, would create dueDateSG.</p></body>
</html>